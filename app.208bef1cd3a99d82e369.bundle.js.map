{"version":3,"sources":["webpack://frontend/./src/App.tsx","webpack://frontend/./src/components/AddPostForm.tsx","webpack://frontend/./src/components/Banner.tsx","webpack://frontend/./src/components/Card.tsx","webpack://frontend/./src/components/EditPostForm.tsx","webpack://frontend/./src/components/HomeNavigation.tsx","webpack://frontend/./src/components/HomePage.tsx","webpack://frontend/./src/components/NavBar.tsx","webpack://frontend/./src/components/PopularCards.tsx","webpack://frontend/./src/components/PostsComponent.tsx","webpack://frontend/./src/components/SinglePostPage.tsx","webpack://frontend/./src/features/posts/postsSlice.ts","webpack://frontend/./src/features/rootReducer.ts","webpack://frontend/./src/index.tsx","webpack://frontend/./src/store/store.ts","webpack://frontend/./src/scss/labshome.scss?2dd2"],"names":["App","props","Provider","store","NavBar","Switch","Route","exact","path","render","HomePage","component","SinglePostPage","EditPostForm","Redirect","to","className","footer","container","Component","defaultProps","done","hot","AddPostForm","useState","title","setTitle","content","setContent","dispatch","useDispatch","htmlFor","type","id","name","value","onChange","e","target","onClick","postAdded","Banner","desc","banner","Card","catchPhrase","link","card","Link","text","postId","match","params","post","useTypedSelector","state","posts","find","history","useHistory","postUpdated","push","HomeNavigation","cards","map","i","key","http","request","fetch","response","json","parsedBody","ok","Error","statusText","description","navCards","popularCards","isFetching","this","setState","console","log","homepage","fetchHomepagesWithFetch","PostsComponent","PopularCards","children","Logo","src","popular","substring","postsSlice","createSlice","initialState","reducers","reducer","action","payload","prepare","nanoid","existingPost","actions","rootReducer","combineReducers","useSelector","StrictMode","document","getElementById","configureStore"],"mappings":"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","file":"app.208bef1cd3a99d82e369.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader/root';\r\nimport React from 'react';\r\nimport { HomePage } from './components/HomePage';\r\nimport { SinglePostPage } from './components/SinglePostPage';\r\nimport { EditPostForm } from './components/EditPostForm';\r\nimport { NavBar } from './components/NavBar';\r\nimport style from './scss/labshome.scss';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\ninterface AppProps {\r\n  title: string;\r\n  done?: boolean;\r\n}\r\n \r\nclass App extends React.Component<AppProps, unknown> {\r\n  \r\n  static defaultProps: Partial<AppProps> = { \r\n    done: false,\r\n  }\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <Provider store={store}>\r\n          <Router>\r\n            <NavBar/>\r\n            <div>\r\n              <Switch>\r\n                <Route exact path=\"/\" render={() => <HomePage/>}/>\r\n                <Route exact path=\"/posts/:postId\" component={SinglePostPage} />\r\n                <Route exact path=\"/editPost/:postId\" \r\n                   component={EditPostForm} />\r\n                <Redirect to=\"/\" />\r\n              </Switch>\r\n            </div>\r\n            <div className={style.footer}>\r\n              <div className={style.container}>\r\n                <p>The Javascript/Typescript laboratories. \r\n                  Contact: Programming Laboratory.</p>\r\n              </div>\r\n            </div>\r\n\r\n          </Router>\r\n        </Provider>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default hot(App);","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postAdded } from '../features/posts/postsSlice';\r\n\r\nexport const AddPostForm: React.FC = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onTitleChanged = (e:React.ChangeEvent<HTMLInputElement>) => \r\n      setTitle(e.target.value);\r\n  const onContentChanged = (e:React.ChangeEvent<HTMLTextAreaElement>) => \r\n      setContent(e.target.value);\r\n\r\n  const onSavePostClicked = () => {\r\n    if (title && content) {\r\n      dispatch(postAdded(title, content));\r\n      setTitle('');\r\n      setContent('');\r\n    }\r\n  };\r\n      \r\n  return (\r\n      <form>\r\n        <label htmlFor=\"postTitle\">Post Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postTitle\"\r\n          name=\"postTitle\"\r\n          value={title}\r\n          onChange={onTitleChanged}\r\n        />\r\n        \r\n        <label htmlFor=\"postContent\">Content</label>\r\n        <textarea\r\n          id=\"postContent\"\r\n          name=\"postContent\"\r\n          value={content}\r\n          onChange={onContentChanged}\r\n        />\r\n        <button type=\"button\" onClick={onSavePostClicked}>Save</button>\r\n      </form>\r\n  );\r\n};","import React from 'react';\r\nimport style from '../scss/labshome.scss';\r\n  \r\ninterface BannerProps {\r\n  title: string;\r\n  desc: string;\r\n}\r\n\r\nconst Banner = ({title, desc}: BannerProps): JSX.Element => {\r\n  return (\r\n    <div className={style.banner}> \r\n    <div className={style.container}>\r\n      <h1>{title}</h1>\r\n      <p>{desc}</p>\r\n    </div>\r\n  </div>);\r\n};\r\n\r\nexport { Banner };","import React from 'react';\r\nimport style from '../scss/labshome.scss';\r\nimport { Link } from 'react-router-dom';\r\n  \r\ninterface CardProps {\r\n  title: string;\r\n  catchPhrase: string;\r\n  link?: {\r\n    to: string;\r\n    text: string;\r\n  }|undefined;\r\n}\r\n\r\nconst Card = ({title, catchPhrase, link}: CardProps): JSX.Element => {\r\n  return (\r\n    <div className={style.card}>\r\n      <div>\r\n        <h3>{title}</h3>\r\n        <p>{catchPhrase}</p>\r\n        { link ? <Link to={link.to}>\r\n            {link.text}\r\n          </Link> : \"\" }\r\n      </div>\r\n   </div>);\r\n};\r\n\r\nexport {Card, CardProps};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTypedSelector } from '../features/rootReducer';\r\nimport { postUpdated } from '../features/posts/postsSlice';\r\nimport style from '../scss/labshome.scss';\r\n\r\nconst EditPostForm: React.FC<{match: {params:{postId:string}}}> = (\r\n    {match}) => {\r\n\r\n  const { postId } = match.params;\r\n\r\n  const post = useTypedSelector(state => \r\n    state.posts.find(post => post.id === postId));\r\n\r\n  const [title, setTitle] = useState(post ? post?.title : \"\");\r\n  const [content, setContent] = useState(post ? post?.content: \"\");\r\n\r\n  const dispatch = useDispatch(); //Todo check TS\r\n  const history = useHistory();\r\n\r\n  const onTitleChanged = (e:React.ChangeEvent<HTMLInputElement>) => \r\n      setTitle(e.target.value);\r\n  const onContentChanged = (e:React.ChangeEvent<HTMLTextAreaElement>) => \r\n      setContent(e.target.value);\r\n\r\n  const onSavePostClicked = () => {\r\n    if (title && content) {\r\n      dispatch(postUpdated({ id: postId, title, content }));\r\n      history.push(`/posts/${postId}`);\r\n    }\r\n  };\r\n      \r\n  return (\r\n    <div className={style.card}>\r\n      <div className={style['post']}>\r\n        <form>\r\n          <label htmlFor=\"postTitle\">Post Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"postTitle\"\r\n            name=\"postTitle\"\r\n            value={title}\r\n            onChange={onTitleChanged}\r\n          />\r\n          \r\n          <label htmlFor=\"postContent\">Content</label>\r\n          <textarea\r\n            id=\"postContent\"\r\n            name=\"postContent\"\r\n            value={content}\r\n            onChange={onContentChanged}\r\n          />\r\n          <button type=\"button\" onClick={onSavePostClicked}>Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { EditPostForm };","import React from 'react';\r\nimport styles from '../scss/labshome.scss';\r\nimport { Card, CardProps} from './Card';\r\n\r\nconst HomeNavigation: React.FC<{cards: CardProps[]}> = (\r\n     {cards}): JSX.Element => {\r\n\r\n  return (<div className={styles['home-nav']}>\r\n    {\r\n       cards.map( (card: CardProps, i:number):JSX.Element => \r\n        (\r\n          <Card key={i} title={card.title} catchPhrase={card.catchPhrase}/>\r\n        )\r\n      ) \r\n    }\r\n  </div>);\r\n};\r\n\r\nexport { HomeNavigation };","import React from 'react';\r\nimport { Banner } from './Banner';\r\nimport style from '../scss/labshome.scss';\r\nimport { HomeNavigation } from './HomeNavigation';\r\nimport { PopularCards } from './PopularCards';\r\nimport { CardProps} from './Card';\r\nimport { PostsComponent } from './PostsComponent';\r\nimport { homepage } from '../../api/homepage.json';\r\n\r\ninterface HomePageProps {\r\n  children: JSX.Element[];\r\n}\r\n\r\ninterface HomePageState {\r\n  title: string; \r\n  description: string;\r\n  navCards: CardProps[];\r\n  popularCards: CardProps[];\r\n  isFetching: boolean;\r\n}\r\n\r\n// fetch typed\r\ninterface HttpResponse<T> extends Response {\r\n  parsedBody?: T\r\n}\r\n\r\nasync function http<T>(request:RequestInfo): Promise<HttpResponse<T>>\r\n{\r\n  const response: HttpResponse<T> = await fetch(\r\n    request\r\n  );\r\n  try {\r\n    response.parsedBody = await response.json();\r\n  } catch (ex) {}\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  return response;  \r\n}\r\n\r\n\r\nclass HomePage extends React.Component<HomePageProps, HomePageState> {\r\n  static defaultProps: Partial<HomePageProps> = {\r\n    children: [],\r\n  }\r\n\r\n  constructor(props: HomePageProps) {\r\n    super(props);\r\n    this.state = {\r\n      title: '', \r\n      description: '',\r\n      navCards: [{title: ' ', catchPhrase: ''}],\r\n      popularCards: [{title: ' ', catchPhrase: ''}],\r\n      isFetching: false\r\n    };\r\n\r\n  } \r\n  \r\n  async fetchHomepagesWithFetch(): Promise<void> { \r\n    this.setState({...this.state, isFetching: true});\r\n    let response: HttpResponse<HomePageState>;\r\n    try {\r\n      response = await http<HomePageState>('/api/v1/homepage');\r\n      if (response.parsedBody) {\r\n          console.log(\"api\", response.parsedBody);\r\n        const {title, description, navCards, popularCards} \r\n           = response.parsedBody;\r\n        this.setState({\r\n          title, description, navCards, popularCards,\r\n          isFetching: false\r\n        });\r\n      }\r\n    } catch (response) {\r\n      console.log(\"Error\", response);\r\n      const {title, description, navCards, popularCards} \r\n           = homepage;\r\n      this.setState({\r\n        title, description, navCards, popularCards,\r\n        isFetching: false\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.fetchHomepagesWithFetch();\r\n  }\r\n\r\n  render (): JSX.Element {\r\n    const {title, description, navCards, popularCards, isFetching} = this.state;\r\n    return (\r\n      <div>\r\n        <Banner title={title} desc={description}/>\r\n        <div className={style.container}>\r\n          <HomeNavigation cards={navCards}/>\r\n          <PostsComponent/>\r\n          <PopularCards cards={popularCards}/>\r\n        </div>\r\n        <p>{isFetching ? 'Fetching home page ...' : ''}</p>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport { HomePage };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from '../scss/labshome.scss';\r\nimport * as Logo from '../scss/images/logo.svg';\r\n\r\nconst NavBar: React.FC = () => {\r\n//./images/logo.svg\"\r\nconsole.log(\"i,age\", Logo);\r\n  return (\r\n    <div className={style[\"navbar-minimal\"]}>\r\n      <img src={ Logo.default }/>\r\n      <Link to=\"/\">Home</Link>\r\n    </div>);\r\n\r\n};\r\n\r\nexport { NavBar };","import React from 'react';\r\nimport styles from '../scss/labshome.scss';\r\nimport { Card, CardProps} from './Card';\r\n\r\nconst PopularCards: React.FC<{cards: CardProps[]}> = (\r\n     {cards}): JSX.Element => {\r\n\r\n  return (<div className={styles.popular}>\r\n    <h2>Popular Laboratories</h2>\r\n    <p>Select a laboratory and explore the algorithm \r\n      with the program and input data.</p>\r\n    <div className={styles['popular-labs']}>\r\n      {\r\n        cards.map( (card: CardProps, i:number):JSX.Element => \r\n          (\r\n            <Card key={i} title={card.title} catchPhrase={card.catchPhrase}/>\r\n          )\r\n        ) \r\n      }\r\n    </div>\r\n  </div>);\r\n};\r\n\r\nexport { PopularCards };","import React from 'react';\r\nimport styles from '../scss/labshome.scss';\r\nimport { useTypedSelector } from '../features/rootReducer';\r\nimport { Card } from './Card';\r\nimport { AddPostForm } from './AddPostForm';\r\n\r\nfunction PostsComponent(): JSX.Element {\r\n  const posts = useTypedSelector(state => state.posts);\r\n\r\n  return (<div className={styles.posts}>\r\n\t\t\t<h2>Posts to Popular Laboratories</h2>\r\n\t\t\t<p>Follow the posts made to Programming Laboratories</p>\r\n\t\t\t<div className={styles['posts-content']}>\r\n\t\t\t\t<AddPostForm />\r\n\t\t\t\t<div className={styles['posts-list']}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tposts.map( (post):JSX.Element => \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\t\t  key={post.id} \r\n\t\t\t\t\t\t\t\t\ttitle={post.title} \r\n\t\t\t\t\t\t\t\t\tcatchPhrase={post.content.substring(0, 100)}\r\n\t\t\t\t\t\t\t\t\tlink={ {text:\"View Post\", to:`/posts/${post.id}`}}/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) \r\n\t\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>);\r\n}\r\n\r\nexport { PostsComponent };\r\n","import React from 'react';\r\nimport { useTypedSelector } from '../features/rootReducer';\r\nimport style from '../scss/labshome.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SinglePostPage: React.FC<{match: {params:{postId:string}}}> = (\r\n    {match}): JSX.Element => {\r\n      \r\n  const { postId } = match.params;\r\n\r\n  const post = useTypedSelector(state =>\r\n    state.posts.find(post => post.id === postId)\r\n  );\r\n\r\n  if (!post) {\r\n    return (\r\n      <section>\r\n        <h2>Post not found!</h2>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={style.card}>\r\n      <div className={style['post']}>\r\n        <h2>{post.title}</h2>\r\n        <p className={style[\"post-content\"]}>{post.content}</p>\r\n        <Link to={`/editPost/${post.id}`}>Edit Post</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SinglePostPage };","import { createSlice, nanoid } from '@reduxjs/toolkit';\r\nimport { PayloadAction } from '@reduxjs/toolkit';\r\nimport { Post } from './types';\r\n\r\nconst initialState:Post[] = \r\n  [\r\n    { id: '1', title: 'First Post!', content: 'Hello!' },\r\n    { id: '2', title: 'Second Post', content: 'More text' }\r\n  ];\r\n\r\n// Warning on reducer immutabiliy:\r\n// Using createSlice its \"Safe\" to call mutating functions like\r\n//  Array.push() or modify object fields like \r\n//  state.someField = someValue inside of createSlice()\r\n\r\n// The reducer object of actions uses PayloadAction<..> to explicit\r\n// declare the actions. name of action is the type is:\r\n// slice name/action method name.\r\n// eg. Post is the payload for postAdded\r\n// CreateSlice lets us define a \"prepare callback\" \r\n// function for action.payload\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    postAdded: {\r\n      reducer(state, action: PayloadAction<Post>) {\r\n        state.push(action.payload);\r\n      },\r\n      prepare(title: string, content: string) {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            title,\r\n            content\r\n          }\r\n        };\r\n      }\r\n    },\r\n    postUpdated(state, action: PayloadAction<Post>) {\r\n      const { id, title, content } = action.payload;\r\n      const existingPost = state.find(post => post.id === id);\r\n      if (existingPost) {\r\n        existingPost.title = title;\r\n        existingPost.content = content;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { postAdded, postUpdated } = postsSlice.actions;\r\n//export default postsSlice.reducer;\r\nexport const { reducer } = postsSlice; ","import { combineReducers } from '@reduxjs/toolkit';\r\nimport { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { reducer as postsReducer} from './posts/postsSlice';\r\n\r\nexport const rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//requireort \"core-js/stable\";\r\nrequire('regenerator-runtime/runtime');\r\n \r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App title=\"Front Ends\"/>\r\n  </React.StrictMode>,\r\n  document.getElementById('app')\r\n);\r\n","//import { createStore, applyMiddleware } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n//import searchReducer from './reducer';\r\n//import thunk from 'redux-thunk';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { rootReducer } from '../features/rootReducer';\r\n\r\nexport default configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\n// const store = configureStore(\r\n//   { reducer: searchReducer\r\n//     });\r\n\r\n//   // const store = configureStore(\r\n//   //   { reducer: {\r\n//   //       search: searchReducer\r\n//   //     }});\r\n    \r\n// export default store;\r\n// export type Store = typeof store.dispatch;\r\n\r\n//export default createStore(searchReducer, \r\n//  composeWithDevTools(applyMiddleware(thunk)));","// extracted by mini-css-extract-plugin\nexport default {\"navbar-minimal\":\"_3nIGi9Bdg-W86wMUrButPd\",\"banner\":\"L4AfGl_TH6AlKkmGtS47V\",\"container\":\"_2w45mQoDyF67dWrSMGJ5Eo\",\"home-nav\":\"_2Bmhe_l1BM0vpg_Ue0NgA_\",\"card\":\"_2DLRxzQtalWn5vJ2Twhz8P\",\"search-bar\":\"_1ljmm57gVXt4dJKPsHBMwZ\",\"posts\":\"_3OErBPMN_5O38oZTws3S5z\",\"post\":\"_1jxrsT1L9XqVxGQSXIFTcT\",\"post-content\":\"_8vwpxwgTmf4yy3T8R3Txg\",\"posts-content\":\"_16iOssS4l0HBp84WfAHGwU\",\"posts-list\":\"_2YjczPPYP6N0skS8MHDWkU\",\"popular\":\"_12kWmrlwWC8SwrMFDYAuma\",\"popular-labs\":\"_1GLL8QgO8Pw7nYJazUa6d6\",\"top\":\"_3R4NKXX8LF67m2jFWwXFyr\",\"next\":\"_1NRFqqutP0aOIXawjKd-Hi\",\"footer\":\"CZ9CfIbLEGbjajBOZ-aII\"};"],"sourceRoot":""}